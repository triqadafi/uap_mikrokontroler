;/*******************************************************
;This program was created by the CodeWizardAVR V3.33
;Automatic Program Generator
;© Copyright 1998-2018 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 12/7/2018
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega16A
;Program type            : Application
;AVR Core Clock frequency: 11.059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;#include <mega16a.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Alphanumeric LCD functions
;#include <alcd.h>
;#include <stdio.h>
;
;
;// Voltage Reference: AREF pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0022 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0023     ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	adc_input -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0024     // Delay needed for the stabilization of the ADC input voltage
; 0000 0025     delay_us(10);
;PCODE: $00000014 VOL: 0
; 0000 0026     // Start the AD conversion
; 0000 0027     ADCSRA|=(1<<ADSC);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0028     // Wait for the AD conversion to complete
; 0000 0029     while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002A     ADCSRA|=(1<<ADIF);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002B     return ADCW;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 002C }
;PCODE: $00000022 VOL: 0
;
;
;    float v_ref = 5;

	.DSEG
;    float v_1 = 0;
;    float v_2 = 0;
;    char buff[16];
;
;void main(void)
; 0000 0035 {

	.CSEG
;PCODE: $00000023 VOL: 0
; 0000 0036     // Port Settings
; 0000 0037     DDRA=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0038     DDRB=0xFF;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0039 
; 0000 003A     // ADC initialization
; 0000 003B     // ADC Clock frequency: 691.200 kHz
; 0000 003C     // ADC Voltage Reference: AREF pin
; 0000 003D     // ADC Auto Trigger Source: ADC Stopped
; 0000 003E     ADMUX=ADC_VREF_TYPE;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 003F     ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (1<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0040     SFIOR=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0041 
; 0000 0042     // Alphanumeric LCD initialization
; 0000 0043     // Connections are specified in the
; 0000 0044     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0045     // RS - PORTD Bit 0
; 0000 0046     // RD - PORTD Bit 1
; 0000 0047     // EN - PORTD Bit 2
; 0000 0048     // D4 - PORTD Bit 4
; 0000 0049     // D5 - PORTD Bit 5
; 0000 004A     // D6 - PORTD Bit 6
; 0000 004B     // D7 - PORTD Bit 7
; 0000 004C     // Characters/line: 16
; 0000 004D     lcd_init(16);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 004E 
; 0000 004F 
; 0000 0050     while (1){
;PCODE: $00000030 VOL: 0
; 0000 0051         v_1 = (read_adc(0)/1024.0) * v_ref * 1000;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0052         v_2 = (read_adc(1)/1024.0) * v_ref * 1000;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0053         sprintf(buff,"V1: %04.2f mV", v_1);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0054         lcd_gotoxy(0,0);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0055         lcd_puts(buff);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0056         lcd_gotoxy(0,1);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0057         sprintf(buff,"V2: %04.2f mV", v_2);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0058         lcd_puts(buff);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0059         delay_ms(500);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 005A     }
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 005B }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
